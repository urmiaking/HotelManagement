@page "/hotel-room/create"
@page "/hotel-room/edit/{Id:int}"

@inject IHotelRoomRepository HotelRoomRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<div class="row mt-2 mb-5">
    <h3 class="card-title text-info m-3">@Title اتاق</h3>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <EditForm Model="HotelRoomModel" OnValidSubmit="HandleHotelRoomUpsert">
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    @*<ValidationSummary></ValidationSummary>*@
                    <div class="form-group">
                        <label>عنوان اتاق</label>
                        <InputText @bind-Value="HotelRoomModel.Name" class="form-control"/>
                        <ValidationMessage For="() => HotelRoomModel.Name"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>ظرفیت</label>
                        <InputNumber @bind-Value="HotelRoomModel.Occupancy" class="form-control"/>
                        <ValidationMessage For="() => HotelRoomModel.Occupancy"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>قیمت</label>
                        <InputNumber @bind-Value="HotelRoomModel.RegularRate" class="form-control"/>
                        <ValidationMessage For="() => HotelRoomModel.RegularRate"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>جزئیات</label>
                        <InputTextArea @bind-Value="HotelRoomModel.Details" class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label>زیربنا</label>
                        <InputText @bind-Value="HotelRoomModel.SqFt" class="form-control"/>
                    </div>
                    <div class="form-group mt-4">
                        <button class="btn btn-primary">@Title اتاق</button>
                        <NavLink href="hotel-room" class="btn btn-secondary">بازگشت</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public int? Id { get; set; }

    private HotelRoomDto HotelRoomModel { get; set; } = new ();

    private string Title { get; set; } = "افزودن";

    protected override async Task OnInitializedAsync()
    {
        if (Id is not null)
        {
            // Update
            Title = "ویرایش";
            HotelRoomModel = await HotelRoomRepository.GetHotelRoom(Id.Value);
        }
        else
        {
            // Create
            HotelRoomModel = new HotelRoomDto();
        }
    }

    private async Task HandleHotelRoomUpsert()
    {
        try
        {
            var roomDetailsByName = await HotelRoomRepository.IsRoomUnique(HotelRoomModel.Name, HotelRoomModel.Id);

            if (roomDetailsByName is not null)
            {
                await JsRuntime.ToastrError("اتاقی با این نام از قبل وجود دارد!");
                return;
            }

            if (HotelRoomModel.Id != 0)
            {
                // Update
                var updateRoomResult = await HotelRoomRepository.UpdateHotelRoom(HotelRoomModel.Id, HotelRoomModel);
                await JsRuntime.ToastrSuccess("اتاق با موفقیت ویرایش شد");
            }
            else
            {
                // Create
                var createdResult = await HotelRoomRepository.CreateHotelRoom(HotelRoomModel);

                await JsRuntime.ToastrSuccess("اتاق با موفقیت ایجاد شد");
            }

            NavigationManager.NavigateTo("/hotel-room");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
        
    }
}
